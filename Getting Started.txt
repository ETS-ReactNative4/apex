Getting Started

Running Apex 4X Locally

Since 4X uses Fetch protocols to import modules when needed, it must be run from a webserver. For testing and development, this can be easily set up locally.

1. Run the setup file named "WebserverInstall" to install the local webserver within this project. This need only be done once.

2. Run the file "WebserverRun" to start the webserver and open the index.htm file at the project root.

3. Within the opened browser, follow the Templates link to browse the available module templates and run them locally.

The help documentation for each of the available template design patterns can be found in the folder: Help/Module Imports/Dynamic Components.

Implementing Apex 4X

Everything that is needed for 4X is included within the 4X directory in the root folder.
The 4X folder can be copied and moved into any other project to begin using it.
The Help folder includes all relevant documentation for using the core and module related features associated with the dual API.

Configuring Apex 4X

There is only one setting that needs to be set for 4X to run properly.

1. Within the 4X folder, open the 4X.max.js file within a text editor, and search for "moduleFolder". The same thing will need to be done for the file 4X.js.

2. Make sure that the folder path specified there points to the desired module folder within the 4X directory, including the "/" character at the end. This property needs to reflect the correct relative folder structure when loaded on a webserver.

3. Load 4X into your project using a standard script statement as shown within the template folders.
